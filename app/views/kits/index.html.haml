%script{:src => "//maps.google.com/maps/api/js?v=3.13&sensor=false&libraries=geometry", :type => "text/javascript"}
%script{:src => "//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js", :type => "text/javascript"}
%script{src:"https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&libraries=places"}

%body.main-image
  .row.collapse.full-width
    .small-12.small-centered.large-uncentered.large-9.columns
      #map-canvas-global
    .large-3.columns
      %input#autocomplete.controls.text-center{type: :text}
      TEST
      TEST
      TEST


/ making an AJAX request to contact the server to get kit addresses
:javascript

  $(function() {
    $.ajax({
      url: "/kits",
      type: "GET",
      dataType: "json",
      success: function(data) {

        // creating a marker bounds object to use for zooming in to the deepest point in which all of the markers are included 
        var markerBounds = new google.maps.LatLngBounds();

        // iterating through all of my data points
        $.each(data, function(index, kit) {
          // this takes latitude and longitude points and puts it in a LatLon object
          var myLatLng = new google.maps.LatLng(kit.latitude, kit.longitude);
          // this creates a marker that uses the LatLon coordinates to make the marker
          var marker = new google.maps.Marker({
            position: myLatLng,
            map: map,
          });
          // when you click on the marker it calls the function that creates the info window (code in map.js)
          google.maps.event.addListener(marker, 'click', function() {
            $.ajax({
              url: '/kits/' + kit.id,
              dataType: "json",
              success: function(data) {
                var string = "<a href='/kits/" + data.id + "'><img src=" + data.photo + " class ='thumbnail'><a/>"
                showWindow(marker, string);
              }
            });
            //var string = "<a href='/kits/" + kit.id + "'><img src='"+ kit.photo.url+"'></a>";
            //showWindow(marker, string);
          });

          // Extend markerBounds with each marker. Essentially saying "hey bounds, include this marker"
          markerBounds.extend(marker.position);
        });

        map.fitBounds(markerBounds);
      }
    });
  });